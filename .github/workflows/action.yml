name: React build
on: 
  push:                               # master Branch에서 push 이벤트가 일어났을 때만 실행
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.   # 레포지토리 체크아웃
        uses: actions/checkout@v3

      - name: Cache node modules      # node modules 캐싱
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: .env setting            # .env 환경변수들 등록
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
          echo "REACT_APP_BUCKET_NAME=${{ secrets.REACT_APP_BUCKET_NAME }}" >> .env
          echo "REACT_APP_REGION=${{ secrets.REACT_APP_REGION }}" >> .env
          echo "REACT_APP_ACCESS=${{ secrets.REACT_APP_ACCESS }}" >> .env
          echo "REACT_APP_SECRET=${{ secrets.REACT_APP_SECRET }}" >> .env
          echo "REACT_APP_IMG_URL=${{ secrets.REACT_APP_IMG_URL }}" >> .env
          
      - name: Install Dependencies    # 의존 파일 설치
        run: npm install

      - name: Build                   # React Build
        run: npm run build

      - name: Deploy                  # S3에 배포하기
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync \
            --region ap-northeast-2 \
            build s3://42nomad.kr \
            --delete

      - name: Cloudfront invalidation
        env: 
          AWS_EC2_METADATA_DISABLED: true
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_DISTRIBUTION_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $AWS_DISTRIBUTION_ID \
            --paths "/*"
